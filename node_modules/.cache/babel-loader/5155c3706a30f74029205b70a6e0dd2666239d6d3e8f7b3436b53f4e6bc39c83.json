{"ast":null,"code":"import _slicedToArray from\"D:/coding/Web/CodeCademy/DevProjects/appointment-planner-starting-v18/appointment-planner-starting-v18/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from\"react\";import{ContactForm}from\"../../components/contactForm/ContactForm\";import{TileList}from\"../../components/tileList/TileList\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var ContactsPage=function ContactsPage(props){/*\r\n  Define state variables for \r\n  contact info and duplicate check\r\n  */var _useState=useState(''),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),phone=_useState4[0],setPhone=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),email=_useState6[0],setEmail=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isDuplicate=_useState8[0],setIsDuplicate=_useState8[1];var handleSubmit=function handleSubmit(e){e.preventDefault();/*\r\n    Add contact info and clear data\r\n    if the contact name is not a duplicate\r\n    */if(!isDuplicate){props.onAddContact({name:name,phone:phone,email:email});setName('');setPhone('');setEmail('');}};/*\r\n  Using hooks, check for contact name in the \r\n  contacts array variable in props\r\n  */useEffect(function(){setIsDuplicate(function(){return props.contacts.some(function(contact){return contact.name===name;});});},[name,props.contacts]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"section\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Add Contact\"}),/*#__PURE__*/_jsx(ContactForm,{name:name,setName:setName,phone:phone,setPhone:setPhone,email:email,setEmail:setEmail,handleSubmit:handleSubmit,isDuplicate:isDuplicate})]}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsxs(\"section\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Contacts\"}),/*#__PURE__*/_jsx(TileList,{items:props.contacts})]})]});};","map":{"version":3,"names":["React","useState","useEffect","ContactForm","TileList","jsx","_jsx","jsxs","_jsxs","ContactsPage","props","_useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","phone","setPhone","_useState5","_useState6","email","setEmail","_useState7","_useState8","isDuplicate","setIsDuplicate","handleSubmit","e","preventDefault","onAddContact","contacts","some","contact","children","items"],"sources":["D:/coding/Web/CodeCademy/DevProjects/appointment-planner-starting-v18/appointment-planner-starting-v18/src/containers/contactsPage/ContactsPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport { ContactForm } from \"../../components/contactForm/ContactForm\";\r\nimport { TileList } from \"../../components/tileList/TileList\";\r\n\r\nexport const ContactsPage = (props) => {\r\n  /*\r\n  Define state variables for \r\n  contact info and duplicate check\r\n  */\r\n\r\n\r\n  const [ name, setName ] = useState('');\r\n  const [ phone, setPhone ] = useState('');\r\n  const [ email, setEmail ] = useState('');\r\n  const [ isDuplicate, setIsDuplicate ] = useState(false);\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    /*\r\n    Add contact info and clear data\r\n    if the contact name is not a duplicate\r\n    */\r\n    if (!isDuplicate)\r\n    {\r\n      props.onAddContact({name, phone, email});\r\n      setName('');\r\n      setPhone('');\r\n      setEmail('');\r\n    }\r\n  };\r\n\r\n  /*\r\n  Using hooks, check for contact name in the \r\n  contacts array variable in props\r\n  */\r\n  useEffect(() =>\r\n  {\r\n    setIsDuplicate(() =>\r\n    {\r\n      return props.contacts.some((contact) => contact.name === name);\r\n    })\r\n  },[name, props.contacts])\r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n        <h2>Add Contact</h2>\r\n        <ContactForm\r\n          name={name}\r\n          setName={setName}\r\n          phone={phone}\r\n          setPhone={setPhone}\r\n          email={email}\r\n          setEmail={setEmail}\r\n          handleSubmit={handleSubmit}\r\n          isDuplicate={isDuplicate}\r\n        />\r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h2>Contacts</h2>\r\n        <TileList items ={props.contacts}/>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"4LAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAElD,OAASC,WAAW,KAAQ,0CAA0C,CACtE,OAASC,QAAQ,KAAQ,oCAAoC,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE9D,MAAO,IAAM,CAAAC,YAAY,CAAG,QAAf,CAAAA,YAAYA,CAAIC,KAAK,CAAK,CACrC;AACF;AACA;AACA,IAGE,IAAAC,SAAA,CAA0BV,QAAQ,CAAC,EAAE,CAAC,CAAAW,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA9BG,IAAI,CAAAF,UAAA,IAAEG,OAAO,CAAAH,UAAA,IACrB,IAAAI,UAAA,CAA4Bf,QAAQ,CAAC,EAAE,CAAC,CAAAgB,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAAhCE,KAAK,CAAAD,UAAA,IAAEE,QAAQ,CAAAF,UAAA,IACvB,IAAAG,UAAA,CAA4BnB,QAAQ,CAAC,EAAE,CAAC,CAAAoB,UAAA,CAAAR,cAAA,CAAAO,UAAA,IAAhCE,KAAK,CAAAD,UAAA,IAAEE,QAAQ,CAAAF,UAAA,IACvB,IAAAG,UAAA,CAAwCvB,QAAQ,CAAC,KAAK,CAAC,CAAAwB,UAAA,CAAAZ,cAAA,CAAAW,UAAA,IAA/CE,WAAW,CAAAD,UAAA,IAAEE,cAAc,CAAAF,UAAA,IACnC,GAAM,CAAAG,YAAY,CAAG,QAAf,CAAAA,YAAYA,CAAIC,CAAC,CAAK,CAC1BA,CAAC,CAACC,cAAc,EAAE,CAClB;AACJ;AACA;AACA,MACI,GAAI,CAACJ,WAAW,CAChB,CACEhB,KAAK,CAACqB,YAAY,CAAC,CAACjB,IAAI,CAAJA,IAAI,CAAEI,KAAK,CAALA,KAAK,CAAEI,KAAK,CAALA,KAAK,CAAC,CAAC,CACxCP,OAAO,CAAC,EAAE,CAAC,CACXI,QAAQ,CAAC,EAAE,CAAC,CACZI,QAAQ,CAAC,EAAE,CAAC,CACd,CACF,CAAC,CAED;AACF;AACA;AACA,IACErB,SAAS,CAAC,UACV,CACEyB,cAAc,CAAC,UACf,CACE,MAAO,CAAAjB,KAAK,CAACsB,QAAQ,CAACC,IAAI,CAAC,SAACC,OAAO,QAAK,CAAAA,OAAO,CAACpB,IAAI,GAAKA,IAAI,GAAC,CAChE,CAAC,CAAC,CACJ,CAAC,CAAC,CAACA,IAAI,CAAEJ,KAAK,CAACsB,QAAQ,CAAC,CAAC,CAEzB,mBACExB,KAAA,QAAA2B,QAAA,eACE3B,KAAA,YAAA2B,QAAA,eACE7B,IAAA,OAAA6B,QAAA,CAAI,aAAW,EAAK,cACpB7B,IAAA,CAACH,WAAW,EACVW,IAAI,CAAEA,IAAK,CACXC,OAAO,CAAEA,OAAQ,CACjBG,KAAK,CAAEA,KAAM,CACbC,QAAQ,CAAEA,QAAS,CACnBG,KAAK,CAAEA,KAAM,CACbC,QAAQ,CAAEA,QAAS,CACnBK,YAAY,CAAEA,YAAa,CAC3BF,WAAW,CAAEA,WAAY,EACzB,GACM,cACVpB,IAAA,SAAM,cACNE,KAAA,YAAA2B,QAAA,eACE7B,IAAA,OAAA6B,QAAA,CAAI,UAAQ,EAAK,cACjB7B,IAAA,CAACF,QAAQ,EAACgC,KAAK,CAAG1B,KAAK,CAACsB,QAAS,EAAE,GAC3B,GACN,CAEV,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}